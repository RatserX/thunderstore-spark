# This workflow will build a PowerShell project
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-powershell

name: PowerShell CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BASE_DIR: base
  DOCS_DIR: docs
  MODPACKS_DIR: modpacks
  OUTPUT_DIR: output
  RELEASE_URL: https://github.com/${{ github.repository }}/releases/download/latest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          echo "commit-messages=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'%s')" >> $GITHUB_OUTPUT

      - name: Run build
        shell: pwsh
        run: |
          pwsh build.ps1 `
            -BasePath ${{ env.BASE_DIR }} `
            -DocsPath ${{ env.DOCS_DIR }} `
            -ModpacksPath ${{ env.MODPACKS_DIR }} `
            -OutputPath ${{ env.OUTPUT_DIR }} `
            -ReleaseUrl ${{ env.RELEASE_URL }}

      - name: Create Release with Generated Scripts
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.setup.outputs.commit-messages }}
          files: ${{ env.OUTPUT_DIR }}/*.ps1
          name: ${{ github.run_id }}

      - name: Push Documentation to Main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ./docs
          git commit -m "Update docs"
          git push origin main
