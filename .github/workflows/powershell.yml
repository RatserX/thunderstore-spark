# This workflow will build a PowerShell project
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-powershell

name: PowerShell CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BASE_DIR: base
  DOCS_DIR: docs
  MODPACKS_DIR: modpacks
  OUTPUT_DIR: output
  RELEASE_URL: https://github.com/${{ github.repository }}/releases/download/latest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          # Setup
          ROOT_PATH=$(pwd)
          echo "base-path=$ROOT_PATH/${{ env.BASE_DIR }}" >> $GITHUB_OUTPUT
          echo "docs-path=$ROOT_PATH/${{ env.DOCS_DIR }}" >> $GITHUB_OUTPUT
          echo "modpacks-path=$ROOT_PATH/${{ env.MODPACKS_DIR }}" >> $GITHUB_OUTPUT
          echo "output-path=$ROOT_PATH/${{ env.OUTPUT_DIR }}" >> $GITHUB_OUTPUT
          echo "tag-name=r$(date +%s)" >> $GITHUB_OUTPUT
          echo "commit-messages=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Output
        run: |
          # Output
          echo "base-path: ${{ steps.setup.outputs.base-path }}"
          echo "docs-path: ${{ steps.setup.outputs.docs-path }}"
          echo "modpacks-path: ${{ steps.setup.outputs.modpacks-path }}"
          echo "output-path: ${{ steps.setup.outputs.output-path }}"
          echo "tag-name: ${{ steps.setup.outputs.tag-name }}"
          echo "commit-messages: ${{ steps.setup.outputs.commit-messages }}"

      - name: Setup PowerShell
        shell: pwsh
        run: |
          # Setup PowerShell
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module powershell-yaml

      - name: Generate output
        shell: pwsh
        run: |
          # Generate output
          $rootPath=$(pwd)
          pwsh $rootPath/build.ps1 `
            -BasePath ${{ steps.setup.outputs.base-path }} `
            -DocsPath ${{ steps.setup.outputs.docs-path }} `
            -ModpacksPath ${{ steps.setup.outputs.modpacks-path }} `
            -OutputPath ${{ steps.setup.outputs.output-path }} `
            -ReleaseUrl ${{ env.RELEASE_URL }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.setup.outputs.commit-messages }}
          files: ${{ env.OUTPUT_DIR }}/*.ps1
          name: Build r${{ github.run_id }}
          tag_name: ${{ steps.setup.outputs.tag-name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update docs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ./docs
          git commit -m "Update docs"
          git push origin main
